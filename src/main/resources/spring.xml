<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
		 http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<context:component-scan base-package="com.web">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- default 0 -->
		<property name="initialSize" value="5" />
		<!-- default 8 -->
		<property name="maxActive" value="10" />
		<property name="maxWait" value="1000" />
		<property name="maxIdle" value="5" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="15000" />
		<property name="numTestsPerEvictionRun" value="20" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />

	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.show_sql=true
				hibernate.format_sql=true
				hibernate.hbm2ddl.auto=update
				hibernate.autoReconnect=true
			</value>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.web.model</value>
			</list>
		</property>
		<property name="entityInterceptor">
            <bean class="com.web.bean.ModelInterceptor"></bean>
        </property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
	</bean>

	<!-- shiro -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.html" />
		<!-- <property name="successUrl" value="/home.jsp" /> -->
<!-- 		<property name="unauthorizedUrl" value="/unauthorized.html" /> -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/js/** = anon
				/img/** = anon
				/index.html = anon
				/user/add = anon
				/user/login = anon
				/user/logout = anon
				
				/test = anon
				<!-- /admin/** = authc -->
				<!-- roles[admin] -->
				<!-- /docs/** = authc, perms[document:read] -->
				<!-- /user/update = authc, roles[common_user] -->
				/** = authc
			</value>
		</property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm" />
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean id="realm" class="com.web.bean.DBRealm" />
</beans>